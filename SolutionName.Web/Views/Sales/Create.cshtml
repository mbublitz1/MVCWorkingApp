@model SolutionName.Web.ViewModels.SalesOrderViewModel
@*library that contains the default JS serializer*@
@using System.Web.Script.Serialization
@using System.Activities.Expressions
@{
    ViewBag.Title = "Create Sales Order";
}

@{
    //Serialize the model data
    string data = new JavaScriptSerializer().Serialize(Model);
}


@section scripts
{
    @*Include script files*@
    <script src="~/Scripts/knockout-3.4.2.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/salesorderviewmodel.js"></script>
    <script type="text/javascript">
        //use the serialized data to instantiate the view model, using the Raw helper will
        //prevent the data from being further encoded
        var salesOrderViewModel = new SalesOrderViewModel(@Html.Raw(data));
        // now that the client side viewmodel avaialble to the view and the data bound attributes bound to display
        // those two attributes, the line below brings the two together
        ko.applyBindings(salesOrderViewModel);
    </script>
}

<h2>@ViewBag.Title</h2>
@*this will bind the paragraphs tags text attribute to the viewmodels MessageToClient Property*@
<p data-bind="text: MessageToClient"></p>

<div>
    <div>
        <label>Customer Name:</label>
        <input data-bind="value: CustomerName, event: {change: flagSalesOrderAsEdited}" />
    </div>
    <div>
        <label>P.O. Number</label>
        <input data-bind="value: PONumber, event: {change: flagSalesOrderAsEdited}" />
    </div>
</div>
<p><button data-bind="click: save">Save</button></p>
<p>

    @Html.ActionLink("Back to List", "Index")
</p>
